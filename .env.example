DJANGO_SETTINGS_MODULE=app.settings

# Security - REQUIRED: Generate with:
# python -c 'from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())'
SECRET_KEY=)fc_h$)z+ttl()$m!yfw-!o+q8&u9z!=!)mcc*rn-a0(t2dljr

# Debug mode (set to 0 or False in production)
DEBUG=1

# HTTPS Enforcement (P1-02)
# Set to 1 or True in production to enforce HTTPS
# Development: Usually False (proxy handles HTTPS)
# Staging/Production: Should be True
ENFORCE_HTTPS=0

# HSTS (HTTP Strict Transport Security) Duration
# How long (in seconds) browsers should remember to only access via HTTPS
# Recommended progression: 3600 (1h) -> 86400 (24h) -> 2592000 (30d) -> 31536000 (1y)
# Only applies when ENFORCE_HTTPS=True
SECURE_HSTS_SECONDS=3600

# HSTS Include Subdomains - Apply HSTS to all subdomains (important for multi-tenant)
# Should be True in production for tenant subdomains (acme.yourdomain.com, etc.)
SECURE_HSTS_INCLUDE_SUBDOMAINS=True

# HSTS Preload - Submit domain to browser preload list
# Only enable after testing with long HSTS duration (6+ months)
# WARNING: Hard to reverse once submitted
SECURE_HSTS_PRELOAD=False

# Admin Panel URL (P1-01: Security Hardening)
# Use a non-standard URL in production to reduce brute-force attack surface
# Development: admin/ (standard)
# Production: Use a random, hard-to-guess path
# Example: secure-admin-xyz789/, management-dashboard-abc123/
ADMIN_URL=admin/

# Database
DATABASE_URL=postgresql://postgres:devpass@localhost:5432/dj01

# Redis
REDIS_URL=redis://localhost:6379/0

# Stripe (get your keys from https://dashboard.stripe.com/test/apikeys)
STRIPE_PUBLIC_KEY=pk_test_dummy
STRIPE_SECRET_KEY=sk_test_dummy

# Email Configuration
# Development: Uses console backend (logs emails to terminal)
# Production: Configure SMTP service (SendGrid, Mailgun, AWS SES)
EMAIL_BACKEND=django.core.mail.backends.console.EmailBackend
# EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend  # Uncomment for production
# EMAIL_HOST=smtp.sendgrid.net
# EMAIL_PORT=587
# EMAIL_USE_TLS=True
# EMAIL_HOST_USER=apikey
# EMAIL_HOST_PASSWORD=your_sendgrid_api_key_here
DEFAULT_FROM_EMAIL=noreply@statuswatch.local
FRONTEND_URL=http://localhost:5173

# CORS & CSRF - comma-separated lists
CORS_ALLOWED_ORIGINS=http://localhost:5173,http://127.0.0.1:5173
CSRF_TRUSTED_ORIGINS=http://localhost:8000,http://acme.localhost:8000,https://acme.statuswatch.local,https://*.statuswatch.local

# Python
PYTHONUNBUFFERED=1

# Django
ALLOWED_HOSTS=127.0.0.1,localhost

# Sentry Error & Performance Monitoring (Optional)
# Sign up at https://sentry.io (free tier available)
# Create a Django project and copy your DSN here
# SENTRY_DSN=https://your-key@o123456.ingest.sentry.io/789012
SENTRY_DSN=https://cc8abfba3003eba4d5cdaeb0961db233@o4510246259720192.ingest.de.sentry.io/4510246271975504
SENTRY_ENVIRONMENT=development
# Sample rate for performance monitoring (0.0-1.0)
# 0.1 = 10% of transactions, 1.0 = 100%
SENTRY_TRACES_SAMPLE_RATE=0.1
# Release tracking (set in CI/CD to track deployments)
# SENTRY_RELEASE=v1.0.0
